{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/%40/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"../../../lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        <DialogPrimitive.Close\r\n          className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n          <XIcon />\r\n          <span className=\"sr-only\">Close</span>\r\n        </DialogPrimitive.Close>\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBACpB,WAAU;;0CACV,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"../../lib/utils\"\r\n\r\n\r\n\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/%40/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"../../../lib/utils\"\r\n\r\nfunction Input({\r\n  className,\r\n  type,\r\n  ...props\r\n}) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,MAAM,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/utils/GeminiAIModel.jsx"],"sourcesContent":["import {\r\n  GoogleGenerativeAI,\r\n  HarmCategory,\r\n  HarmBlockThreshold,\r\n} from \"@google/generative-ai\";\r\n\r\nconst apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;\r\nconst genAI = new GoogleGenerativeAI(apiKey);\r\n\r\nconst model = genAI.getGenerativeModel({\r\n  model: \"gemini-2.0-flash-exp\",\r\n});\r\n\r\nconst generationConfig = {\r\n  temperature: 1,\r\n  topP: 0.95,\r\n  topK: 40,\r\n  maxOutputTokens: 8192,\r\n  responseMimeType: \"text/plain\",\r\n};\r\n\r\nconst safetySettings = [\r\n  {\r\n    category: HarmCategory.HARM_CATEGORY_HARASSMENT,\r\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n  },\r\n  {\r\n    category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,\r\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n  },\r\n  {\r\n    category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\r\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n  },\r\n  {\r\n    category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\r\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n  },\r\n];\r\n\r\n\r\n export const chatSession = model.startChat({\r\n  generationConfig,\r\n  safetySettings,\r\n});\r\n\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAMA,MAAM,SAAS,QAAQ,GAAG,CAAC,0BAA0B;AACrD,MAAM,QAAQ,IAAI,8JAAA,CAAA,qBAAkB,CAAC;AAErC,MAAM,QAAQ,MAAM,kBAAkB,CAAC;IACrC,OAAO;AACT;AAEA,MAAM,mBAAmB;IACvB,aAAa;IACb,MAAM;IACN,MAAM;IACN,iBAAiB;IACjB,kBAAkB;AACpB;AAEA,MAAM,iBAAiB;IACrB;QACE,UAAU,8JAAA,CAAA,eAAY,CAAC,wBAAwB;QAC/C,WAAW,8JAAA,CAAA,qBAAkB,CAAC,sBAAsB;IACtD;IACA;QACE,UAAU,8JAAA,CAAA,eAAY,CAAC,yBAAyB;QAChD,WAAW,8JAAA,CAAA,qBAAkB,CAAC,sBAAsB;IACtD;IACA;QACE,UAAU,8JAAA,CAAA,eAAY,CAAC,+BAA+B;QACtD,WAAW,8JAAA,CAAA,qBAAkB,CAAC,sBAAsB;IACtD;IACA;QACE,UAAU,8JAAA,CAAA,eAAY,CAAC,+BAA+B;QACtD,WAAW,8JAAA,CAAA,qBAAkB,CAAC,sBAAsB;IACtD;CACD;AAGO,MAAM,cAAc,MAAM,SAAS,CAAC;IAC1C;IACA;AACF","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/utils/schema.js"],"sourcesContent":["import { pgTable, serial, text, varchar } from \"drizzle-orm/pg-core\";\r\n\r\nexport const MockInterview = pgTable('userdata', {\r\n    id: serial('id').primaryKey(),\r\n    jsonMockResp: text('jsonMockResp').notNull(),\r\n    jobPosition: varchar('jobPosition').notNull(),\r\n    jobExperience: varchar('jobExperience').notNull(),\r\n    createdBy: varchar('createdBy').notNull(),\r\n    createdAt: varchar('createdAt'),\r\n    mockId: varchar('mockId').notNull()\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;;AAEO,MAAM,gBAAgB,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD,EAAE,YAAY;IAC7C,IAAI,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,MAAM,UAAU;IAC3B,cAAc,CAAA,GAAA,+JAAA,CAAA,OAAI,AAAD,EAAE,gBAAgB,OAAO;IAC1C,aAAa,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,eAAe,OAAO;IAC3C,eAAe,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB,OAAO;IAC/C,WAAW,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,aAAa,OAAO;IACvC,WAAW,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE;IACnB,QAAQ,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,UAAU,OAAO;AACrC","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/utils/db.js"],"sourcesContent":["import { neon } from '@neondatabase/serverless';\r\nimport { drizzle } from 'drizzle-orm/neon-http';\r\nimport * as schema from './schema';\r\nconst sql = neon(process.env.NEXT_PUBLIC_DRIZZLE_DB_URL);\r\n export const db = drizzle(sql,{schema} );"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,MAAM,CAAA,GAAA,sJAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,CAAC,0BAA0B;AAC/C,MAAM,KAAK,CAAA,GAAA,wJAAA,CAAA,UAAO,AAAD,EAAE,KAAI;IAAC,QAAA;AAAM","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file://D%3A/AI-INTERVIEW-MOCKER/ai-interview-mocker/app/dashboard/_components/AddNewInterview.jsx"],"sourcesContent":["\"use client\"\r\nimport React, { useState } from 'react'\r\n\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '../../../@/components/ui/dialog'\r\n\r\nimport { Button } from \"../../../components/ui/button\"\r\nimport { Input } from '../../../@/components/ui/input'\r\nimport { chatSession } from '../../../utils/GeminiAIModel'\r\nimport { MockInterview } from '../../../utils/schema'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useUser } from '@clerk/nextjs'\r\nimport moment from 'moment/moment'\r\nimport { db } from '../../../utils/db' // Update path as needed\r\nimport { useRouter } from 'next/navigation'\r\n\r\n\r\nfunction AddNewInterview() {\r\n  const [openDailog, setOpenDailog] = useState(false)\r\n  const [JobPosition, setJobPosition] = useState()\r\n  const [JobDesc, setJobDesc] = useState()\r\n  const [JobExperience, setJobExperience] = useState()\r\n  const router=useRouter();\r\n\r\n  const { user } = useUser()\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    console.log(JobPosition, JobDesc, JobExperience)\r\n\r\n    const InputPrompt =\r\n      \"Job Position: \" +\r\n      JobPosition +\r\n      \", Job Description: \" +\r\n      JobDesc +\r\n      \", Year of Experience: \" +\r\n      JobExperience +\r\n      \", Based on this information, please give me \" +\r\n      process.env.NEXT_PUBLIC_INTERVIEW_QESTION_COUNT +\r\n      \" interview questions with answers in JSON format. Provide questions and answers as fields in the JSON.\"\r\n\r\n    const result = await chatSession.sendMessage(InputPrompt)\r\n    const rawText = await result.response.text()\r\n    const cleanedJson = rawText.replace('```json', '').replace('```', '').trim()\r\n\r\n    console.log(\"Cleaned JSON:\", cleanedJson)\r\n\r\n    if (cleanedJson) {\r\n      const resp = await db.insert(MockInterview).values({\r\n        mockId: uuidv4(),\r\n        jsonMockResp: cleanedJson,\r\n        jobPosition: JobPosition,\r\n        jobExperience: JobExperience,\r\n        createdBy: user?.primaryEmailAddress?.emailAddress,\r\n        createdAt: moment().format('DD-MM-YYYY'),\r\n      }).returning({ mockId: MockInterview.mockId })\r\n\r\n      console.log(\"Insert ID:\", resp)\r\n\r\n      if(resp)\r\n      {\r\n        setOpenDailog(false);\r\n        router.push('/dashboard/interview/'+resp[0].mockId)\r\n      }\r\n\r\n    } else {\r\n      console.log(\"ERROR: Empty or invalid AI response\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className='p-10 border rounded-lg bg-secondary hover:scale-150 hover:shadow-md cursor-pointer transition-all'\r\n        onClick={() => setOpenDailog(true)}\r\n      >\r\n        <h2 className='text-lg text-center'>+Add new Interview</h2>\r\n      </div>\r\n\r\n      <Dialog open={openDailog}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <DialogHeader>\r\n            <DialogTitle className='font-bold text-2xl'>Tell us more about your job interview</DialogTitle>\r\n            <DialogDescription>\r\n              <form onSubmit={onSubmit}>\r\n                <div>\r\n                  <h2>Add details about your job position/role, job description and year of experience</h2>\r\n\r\n                  <div className='mt-7 my-2'>\r\n                    <label>Job Role/Job Position</label>\r\n                    <Input\r\n                      placeholder=\"Ex: Full Stack Developer\"\r\n                      required\r\n                      onChange={(event) => setJobPosition(event.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='my-3'>\r\n                    <label htmlFor=\"jobDesc\" className=\"block mb-1 font-medium\">\r\n                      Job Description / Tech Stack (In Short)\r\n                    </label>\r\n                    <textarea\r\n                      id=\"jobDesc\"\r\n                      className=\"w-full border rounded-md p-2\"\r\n                      placeholder=\"e.g., React, Angular, NodeJs, MySQL, etc.\"\r\n                      required\r\n                      onChange={(event) => setJobDesc(event.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='my-3'>\r\n                    <label>Year of Experience</label>\r\n                    <Input\r\n                      placeholder=\"5\"\r\n                      type=\"number\"\r\n                      max=\"50\"\r\n                      required\r\n                      onChange={(event) => setJobExperience(event.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='flex gap-5 justify-end'>\r\n                  <Button variant=\"ghost\" onClick={() => setOpenDailog(false)}>Cancel</Button>\r\n                  <Button type=\"submit\">Start Interview</Button>\r\n                </div>\r\n              </form>\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddNewInterview\r\n"],"names":[],"mappings":"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","debugId":null}}]
}